const http = require('http');

const config = require('../config').app;
const app = require('../app');
const prestart = require('../prestart');

app.set('port', config.port);

const server = http.createServer(app);

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  switch (error.code) {
    case 'EACCES':
      console.log(`Port ${config.port} requires elevated privileges`);
      process.exit(1);
      break;

    case 'EADDRINUSE':
      console.log(`Port ${config.port} is already in use`);
      process.exit(1);
      break;

    default:
      throw error;
  }
}

function onListening() {
  console.log(`Listening on ${config.host}:${config.port}`);
}

function onShutdown() {
  console.log('Shutting down');

  server.close(() => {
    console.log('Closed pending connections');
    process.exit();
  });

  setTimeout(() => {
    console.log('Unable to close pending connections, forcefully shutting down');
    process.exit();
  }, 5 * 1000);
}

// prestart.exec();

server.listen(config.port);
server.on('error', onError);
server.on('listening', onListening);

process.on('SIGINT', onShutdown);
process.on('SIGTERM', onShutdown);
